#include <OneButton.h>

OneButton buttonUp(A1, true);
OneButton buttonDown(A2, true);

const int BUFFER_SIZE = 12;
const int BUFFER_SIZE_UP = 13;

int currentGear = 0;
int previousGear = 0;

byte buf[BUFFER_SIZE_UP];
byte buf_up[BUFFER_SIZE_UP] = {13, 1, 5, 86, 9, 154, 40, 202, 4, 20, 1, 50, 14}; // sample packet generated by the web calculator
 
void setup() {
  //Setup serial connection
  Serial.begin(9600);
  Serial1.begin(9600);

  buttonUp.attachClick(increaseGear);
  buttonDown.attachClick(decreaseGear);
  buttonDown.attachLongPressStart(walkMode);
  buttonDown.attachLongPressStop(stopWalkMode);
}
 
void loop() {
  if (Serial1.available() >= BUFFER_SIZE) { // check if there are enough available bytes to read
    Serial1.readBytes(buf, BUFFER_SIZE); // read bytes to the buf array
    Serial.print("I received: ");
    for(int i = 0; i < BUFFER_SIZE; i++){
      Serial.print("B");
      Serial.print(i);
      Serial.print(": ");
      Serial.print(buf[i]);
      Serial.print(" ");
    }
    Serial.println("");
  }
  buf_up[1] = currentGear;
  buf_up[5] = calculateCRC(buf_up);
  Serial1.write(buf_up, BUFFER_SIZE_UP); // if there are no available bytes send a packet to turn on the controller (it will not start without one)
  buttonUp.tick();
  buttonDown.tick();
  delay(10);
}
 
void increaseGear() {
  if (currentGear < 5) {
    currentGear++;
  }
} 
void decreaseGear(){       
  if (currentGear > 0) {
    currentGear--;
  }
}
void walkMode() {
  previousGear = currentGear;
  currentGear = 6;
}
void stopWalkMode() {
  currentGear = previousGear;
}
int calculateCRC(byte buf_up[]) {
  int crc = 0;
  for (int i = 0; i < BUFFER_SIZE_UP; i++) {
    if (i != 5) {
      crc ^= buf_up[i];
    }
  }
  crc ^= 3;
  return crc;
}